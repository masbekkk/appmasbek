import 'package:appmasbek/flutter_layout.dart';
import 'package:appmasbek/grid_item.dart';
import 'package:appmasbek/model/programming_modules.dart';
import 'package:appmasbek/provider/done_modules.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import 'package:appmasbek/data/api/api_services.dart';

class ModulesGrid extends StatefulWidget{
  final List<ProgrammingModules> checkedData;

  const ModulesGrid({
    Key? key,
    required this.checkedData
  }) : super(key: key);

  @override
  // ignore: no_logic_in_create_state
  _ModulesGridState createState() => _ModulesGridState(checkedData);

}
class _ModulesGridState extends State<ModulesGrid>{
  
  final List<ProgrammingModules> dataChecked;
  late Future<ProgrammingModulesResult> _modules;
  @override
  void initState() {
    super.initState();
    _modules = ApiService().topHeadlines();
  }
  _ModulesGridState(this.dataChecked);

  @override
  // Widget build(BuildContext context){
    // return Padding(
    //   padding: const EdgeInsets.all(24.0),
    //   child: GridView.count(
    //     crossAxisCount: 4,
    //     children: data.map((place) {
    //       return InkWell(
    //         onTap: () {
    //           Navigator.push(context, MaterialPageRoute(builder: (context) {
    //             return DetailScreen(place: place);
    //           }));
    //         },
    //         child: Consumer<DoneModulesProvider>(
    //         builder: (context, DoneModulesProvider data, widget){
    //           return GridItem(
    //             place: place, 
    //             isChecked: dataChecked.contains(place), 
    //             onCheckboxClick:  (bool? value){
    //               setState(() {
    //                 if(value != null){
    //                   value ? dataChecked.add(place) : dataChecked.remove(place);
    //                 }
    //               });
    //             },
    //             );
    //         },
    //         ),
    //       );
    //     }).toList(),
    //   ),
    // );
  // }
  Widget _buildGrid(BuildContext context) {
    return FutureBuilder(
      future: _modules,
      builder: (context, AsyncSnapshot<ProgrammingModulesResult> snapshot) {
        var state = snapshot.connectionState;
        if (state != ConnectionState.done) {
          return Center(child: CircularProgressIndicator());
        } else {
          if (snapshot.hasData) {
                return Padding(
                  padding: const EdgeInsets.all(24.0),
                  child: GridView.count(
                    crossAxisCount: 4,
                    children: snapshot.data.map((place) {
                      return InkWell(
                        onTap: () {
                          Navigator.push(context, MaterialPageRoute(builder: (context) {
                            return DetailScreen(place: place);
                          }));
                        },
                        child: Consumer<DoneModulesProvider>(
                        builder: (context, DoneModulesProvider data, widget){
                          return GridItem(
                            place: place, 
                            isChecked: dataChecked.contains(place), 
                            onCheckboxClick:  (bool? value){
                              setState(() {
                                if(value != null){
                                  value ? dataChecked.add(place) : dataChecked.remove(place);
                                }
                              });
                            },
                            );
                        },
                        ),
                      );
                    }).toList(),
                  ),
                );
}